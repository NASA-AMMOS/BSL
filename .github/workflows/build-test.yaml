##
## Copyright (c) 2025 The Johns Hopkins University Applied Physics
## Laboratory LLC.
##
## This file is part of the Bundle Protocol Security Library (BSL).
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##     http://www.apache.org/licenses/LICENSE-2.0
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## This work was performed for the Jet Propulsion Laboratory, California
## Institute of Technology, sponsored by the United States Government under
## the prime contract 80NM0018D0004 between the Caltech and NASA under
## subcontract 1700763.
##
name: Build and run tests
on:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - main
      - 'apl-fy[0-9][0-9]'
  pull_request: {} # any target

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-24.04', 'centos-9']
        compiler: ['gcc', 'clang']
    name: Unit Test (${{matrix.os}} ${{matrix.compiler}})
    runs-on: ${{ matrix.os == 'centos-9' && 'ubuntu-24.04' || matrix.os }}
    container: ${{ matrix.os == 'centos-9' && 'quay.io/centos/centos:stream9' || null }}
    permissions:
      contents: read
      actions: write
    steps:
      - name: Set up OS
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
              cmake ninja-build ruby gcc g++ ccache patch \
              libssl-dev \
              ${{matrix.compiler=='clang' && 'clang llvm' || ''}} \              valgrind gcovr xmlstarlet
      - name: Set up OS
        if: startsWith(matrix.os, 'centos')
        run: |
          dnf config-manager --set-enabled crb
          dnf install -y epel-release
          dnf install -y \
              git rsync \
              cmake ninja-build \
              ruby pkg-config gcc gcc-c++ ccache patch \
              openssl-devel \
              ${{matrix.compiler=='clang' && 'clang llvm' || ''}} \              valgrind xmlstarlet python3-pip
          pip3 install gcovr
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Dependencies
        run: ./build.sh deps
      - name: Prep
        run: |
          ./build.sh prep \
              ${{matrix.compiler=='clang' && '-DCMAKE_C_COMPILER=clang' || ''}} \
              -DBUILD_DOCS_API=OFF -DBUILD_DOCS_MAN=OFF -DBUILD_TESTING=ON
      - name: Build
        run: ./build.sh
      - name: Test
        run: ./build.sh check
      - name: Collect coverage
        run: ./build.sh coverage
      - name: Archive coverage
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.job}}-${{matrix.os}}-${{matrix.compiler}}-coverage
          path: build/default/coverage*
      - name: Report coverage
        run: |
          SRC_COV_PERC=$(xmlstarlet sel -t -v 'floor(/coverage/packages/package[@name="src"]/@line-rate * 100)' -n build/default/coverage-xml.xml)
          echo "Source coverage: ${SRC_COV_PERC}%" >> $GITHUB_STEP_SUMMARY

  mock-bpa-test:
    name: Mock BPA Test (ubunntu-24.04 gcc)
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      actions: write
    steps:
      - name: Set up OS
        run: |
          sudo apt-get update && sudo apt-get install -y \
          cmake ninja-build ruby gcc g++ ccache patch \
          libssl-dev \
          valgrind gcovr xmlstarlet
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
      - name: Dependencies
        run: ./build.sh deps
      - name: Prep
        run: ./build.sh prep -DBUILD_DOCS_API=OFF -DBUILD_DOCS_MAN=OFF -DBUILD_TESTING=ON
      - name: Build
        run: ./build.sh
      - name: Install
        run: ./build.sh install
      - name: Check symbols
        run: |
          ./check_symbols.py --prefix bsl_ -- bsl_front bsl_backend bsl_crypto
          ./check_symbols.py --prefix bslx_ -- bsl_default_sc
          ./check_symbols.py --prefix bslp_ -- bsl_sample_pp
          ./check_symbols.py -- bsl_mock_bpa
      - name: Test Prep
        run: |
          sudo apt-get update && sudo apt-get install -y \
          python3 python3-pip
          pip3 install --upgrade pip
          pip3 install -r mock-bpa-test/requirements.txt
      - name: Test
        run: python3 -m pytest mock-bpa-test --capture=no --log-cli-level=debug
      - name: Collect coverage
        run: ./build.sh coverage
      - name: Archive coverage
        uses: actions/upload-artifact@v4
        with:
          name: mock-bpa-test-coverage
          path: build/default/coverage*
      - name: Report coverage
        run: |
          SRC_COV_PERC=$(xmlstarlet sel -t -v 'floor(/coverage/packages/package[@name="src"]/@line-rate * 100)' -n build/default/coverage-xml.xml)
          echo "Source coverage: ${SRC_COV_PERC}%" >> $GITHUB_STEP_SUMMARY
